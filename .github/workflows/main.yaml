name: CI/CD Pipeline

# On push to main branch
on:
  push:
    branches:
      - main

# 
env:
  PATH_FOR_LINT: "src config tests"
  SERVER_USER: ${{ secrets.SERVER_USER }}
  SERVER_HOST: ${{ secrets.SERVER_HOST }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  DEPLOY_PATH: "/home/${{ secrets.SERVER_USER }}/otus-cicd"

# jobs:
jobs:
  # Linting and formatting https://github.com/actions/checkout
  lint:
    runs-on: ubuntu-latest
    # On push to main branch
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      # Install dependencies
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      # Install dependencies
      - name: Install dependencies
        run: |
          source .bashrc
          pip install --upgrade pip
          pip install -r requirements/requirements-lint.txt
          pip install -r requirements/requirements.txt
      # Linting
      - name: Run isort
        run: isort ${PATH_FOR_LINT} --check --profile black

      - name: Run black
        run: black ${PATH_FOR_LINT} --check

      - name: Run ruff
        run: ruff check ${PATH_FOR_LINT}

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          source .bashrc
          pip install --upgrade pip
          pip install -r requirements/requirements-test.txt
          pip install -r requirements/requirements.txt

      - name: Run pytest
        run: |
          source .bashrc
          pytest --cov=src tests

  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Copy files to VM
        uses: appleboy/scp-action@v1
        with:
          host: ${{ env.SERVER_HOST }}
          username: ${{ env.SERVER_USER }}
          key: ${{ env.SSH_PRIVATE_KEY }}
          source: ".bashrc,requirements,src,config,models,data,scripts"
          target: ${{ env.DEPLOY_PATH }}

      - name: Install dependencies on VM
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ env.SERVER_HOST }}
          username: ${{ env.SERVER_USER }}
          key: ${{ env.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ env.DEPLOY_PATH }}
            source .bashrc
            ls -la

            if [[ -d .venv ]]; then
              echo "Virtual environment already exists. Skipping creation."
            else
              python3 -m venv .venv
            fi

            source .venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements/requirements.txt
  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Deploy application
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ env.SERVER_HOST }}
          username: ${{ env.SERVER_USER }}
          key: ${{ env.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ env.DEPLOY_PATH }}
            source .bashrc
            source .venv/bin/activate
            chmod +x scripts/entrypoint.sh
            bash scripts/entrypoint.sh
